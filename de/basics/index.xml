<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Grundlagen on CrowPi goes Java</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/</link><description>Recent content in Grundlagen on CrowPi goes Java</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/index.xml" rel="self" type="application/rss+xml"/><item><title>Die CrowPi Plattform</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/crowpi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/crowpi/</guid><description>Das Wichtigste in Kürze Beim CrowPi handelt es sich um einen vielfältigen Baukasten der Firma Elecrow, der in Verbindung mit einem Raspberry Pi den Benutzer zahlreiche Komponenten zu Lern- und Weiterbildungszwecken nutzen lässt. Das Gerät entstand im Rahmen einer Kickstarter-Kampagne und konnte schnell eine grosse Anzahl von Unterstützern finden.
Im Gegensatz zu anderen Elektronikbausätzen sind beim CrowPi alle Komponenten direkt über die Platine mit den jeweiligen Komponenten verbunden, sodass kein manuelles und aufwendiges Verkabeln der einzelnen Bauteile mehr erforderlich ist.</description></item><item><title>Starten der Applikation</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/running/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/running/</guid><description>In diesem Kapitel wird genauer beschrieben, was alles beim Starten einer Applikation passiert und wie das Framework benutzt werden kann. Der genaue Aufbau des Application Frameworks welches dies alles auf diese Art und Weise ermöglicht, ist in einem separaten Kapitel zu finden.
Starten des Application Framework Grundsätzlich wurde ein erster Start bereits zum Test am Ende des Setups ausgeführt. Benötigt wurden folgende 3 Schritte:
Anwählen der Run Config crowpi-examples [install] Starten mit Run Button Wählen der Applikation auf der Kommandozeile (falls keine Argumente verwendet werden) Was passiert beim Start Durch die Startkonfiguration und das Maven Projekt werden automatisch verschiedene Schritte beim Starten der Applikation ausgeführt.</description></item><item><title>Debugging der Applikation</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/debugging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/debugging/</guid><description>Auf dieser Seite werden die Grundlagen der Fehlersuche mit dem Setup aus dem ersten Kapitel beschrieben. Dazu wird Schritt für Schritt erklärt, wie man den Debugger starten und verwenden kann.
Applikation mit Debugger starten Zum Starten der Applikation mit Debugger werden die beiden Run Konfigurationen crowpi-examples [debug] und Remote Debug benötigt. Diese sind nach dem Setup bereits korrekt eingestellt und können verwendet werden. Wichtig dabei ist die Reihenfolge, mit der die Konfigurationen gestartet werden.</description></item><item><title>Application Framework</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/framework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/framework/</guid><description>Grundlagen Um ein möglichst einfaches Arbeiten mit diesem Projekt zu gewährleisten, wurde ein einfaches Application Framework definiert. Dieses besteht aus einem regulären Java Interface und somit kann schon mit wenigen Zeilen Code eine neue Applikation mit eigenem Code gebaut werden. An jede Applikation wird hierbei jeweils der Pi4J Context übergeben, mit welchem alle Komponenten des CrowPi angesteuert werden können.
Starten einer Applikation Der integrierte Launcher kann zu jeder Zeit mit Maven gestartet werden.</description></item><item><title>Entwicklungsprozess</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/dev-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/basics/dev-process/</guid><description>Dieses Ablaufdiagramm zeigt, wie die Entwicklung einer neuen Applikation mit dem CrowPi Goes Java Framework ablaufen könnte.
graph TB; A[Idee] -- B B[Benötigte Hardware] -- C{Neue Entwicklung oder mit Beispiel} C -- | Beispiel erweitern | D[Passendes Example wählen] -- F C -- | Neue Anwendung | E[App erstellen und registrieren] -- F F[Lesen Dokumentation zu Hardware] -- G G[Ablauf aufzeichnen] -- H H[App programmieren] -- I I[Unit Tests ergänzen] -- H I -- J[Testen der App] J -- K[Dokumentation der App] Erklärung der einzelnen Schritte Idee Bevor auch nur im Ansatz an eine Entwicklung zu denken ist, muss eine Idee vorhanden sein.</description></item></channel></rss>