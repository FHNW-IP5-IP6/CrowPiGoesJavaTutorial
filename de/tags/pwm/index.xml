<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pwm on CrowPi goes Java</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/tags/pwm/</link><description>Recent content in pwm on CrowPi goes Java</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/tags/pwm/index.xml" rel="self" type="application/rss+xml"/><item><title>Buzzer</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/buzzer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/buzzer/</guid><description>Funktionsweise Der Buzzer funktioniert wie ein Lautsprecher, jedoch mit dem Unterschied, dass dieser technisch gesehen nur einen einzigen Ton abspielen kann. Dank der Verwendung von PWM ist es jedoch möglich diesen auch so anzusteuern, dass damit entsprechende Melodien mit verschiedenen Tönen abgespielt werden können.
Die Klasse BuzzerComponent verwendet eine solche PWM-Implementation und bietet eine einfache Schnittstelle, mit welcher beliebige Töne abgespielt werden können. Um eine zuverlässige Wiedergabe der gewünschten Frequenzen zu ermöglichen, verwendet diese Komponente Hardware PWM.</description></item><item><title>Pulse Width Modulation (PWM)</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/pwm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/pwm/</guid><description>Das Wichtigste in Kürze Die Abkürzung PWM steht für Pulse Width Modulation und wird im Deutschen auch oft als Pulsbreitenmodulation oder Pulsweitenmodulation bezeichnet. Diese Technik wird unter anderem für die Steuerung von Servomotoren eingesetzt und findet beispielsweise auch Verwendung bei den Lüftern von einem regulären Computer.
Mit PWM ist es möglich, eine Komponente wie einen Motor nicht nur mehr rein binär zu steuern, sprich aus (0% Leistung) oder ein (100% Leistung), sondern diese fast beliebig zu steuern.</description></item><item><title>Servomotor</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/servo-motor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/components/servo-motor/</guid><description>Funktionsweise Servomotoren sind in einer Vielzahl von Bauformen und Grössen erhältlich. Eine Eigenschaft, welche einen Servomotor von einem normalen Elektromotor unterscheidet, ist die Existenz eines Regelkreises. Dieser Regelkreis ermöglicht also erst die Kontrolle über Drehgeschwindigkeit, Beschleunigung und Winkelposition des Motors. Im Gegensatz zum Schrittmotor sorgt nicht der physikalische Aufbau für diese Kontrollmöglichkeiten, sondern eine Regelung. Die Regelung im Falle des beim CrowPi beiliegenden Servomotors wird durch ein simples Potentiometer erreicht. Bei industriellen, hochwertigen Servomotoren werden für die Positionsrückmeldung spezielle Encoder verwendet.</description></item></channel></rss>