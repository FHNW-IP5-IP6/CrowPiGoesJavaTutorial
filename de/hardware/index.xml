<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hardware on CrowPi goes Java</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/</link><description>Recent content in Hardware on CrowPi goes Java</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>I²C</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/i2c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/i2c/</guid><description>Das Wichtigste in Kürze I²C (gesprochen Englisch als I-Squared-C) ist ein ursprünglich von Philips erfundener Bus. Er ist als klassischer Master-Slave-Bus konzipiert. Hierbei wird eine Datenübertragung immer durch einen Master initiiert. Auch ein Aufbau in einem Multi-Master System ist möglich. Angeschlossen wird I²C über zwei Signalleitungen (Datenleitung und Taktleitung). Die Übertragungsrate des Buses kann je nach Taktrate zwischen 0.1 Mbit/s bis zu 3.4 Mbit/s liegen. Sofern nur eine unidirektionale Verbindung nötig ist, wäre sogar 5.</description></item><item><title>Pulse Width Modulation (PWM)</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/pwm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/pwm/</guid><description>Das Wichtigste in Kürze Die Abkürzung PWM steht für Pulse Width Modulation und wird im Deutschen auch oft als Pulsbreitenmodulation oder Pulsweitenmodulation bezeichnet. Diese Technik wird unter anderem für die Steuerung von Servomotoren eingesetzt und findet beispielsweise auch Verwendung bei den Lüftern von einem regulären Computer.
Mit PWM ist es möglich, eine Komponente wie einen Motor nicht nur mehr rein binär zu steuern, sprich aus (0% Leistung) oder ein (100% Leistung), sondern diese fast beliebig zu steuern.</description></item><item><title>Serial Peripheral Interface (SPI)</title><link>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/spi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fhnw-ip5-ip6.github.io/CrowPiGoesJavaTutorial/de/hardware/spi/</guid><description>Das Wichtigste in Kürze Das Serial Peripheral Interface, abgekürzt SPI, ist ein Bus-System welches eine Kommunikation zwischen einem Hauptgerät (englisch als «Master» bezeichnet) und einem oder mehreren Nebengeräten (englisch als «Slave» bezeichnet) ermöglicht. Eine direkte Kommunikation zwischen allen Teilnehmern ist hierbei nicht möglich, viel mehr kann der Master jederzeit auswählen mit welchem Slave er Daten austauschen möchte.
Um nur einen Slave anzusprechen werden insgesamt 3 Signalleitungen benötigt, wovon zwei für die bidirektionale Datenübertragung und eine als Taktgeber für die serielle Übertragung genutzt wird.</description></item></channel></rss>